<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class weex extends \ccxt\async\Exchange {
    public function public_get_public_time($params = array()) {
        return $this->request('public/time', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_public_currencies($params = array()) {
        return $this->request('public/currencies', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_public_products($params = array()) {
        return $this->request('public/products', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_public_exchangeinfo($params = array()) {
        return $this->request('public/exchangeInfo', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_market_ticker($params = array()) {
        return $this->request('market/ticker', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_market_tickers($params = array()) {
        return $this->request('market/tickers', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_market_fills($params = array()) {
        return $this->request('market/fills', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_market_candles($params = array()) {
        return $this->request('market/candles', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_market_depth($params = array()) {
        return $this->request('market/depth', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_assets($params = array()) {
        return $this->request('account/assets', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_transferrecords($params = array()) {
        return $this->request('account/transferRecords', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_post_account_bills($params = array()) {
        return $this->request('account/bills', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_orders($params = array()) {
        return $this->request('trade/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_batch_orders($params = array()) {
        return $this->request('trade/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_cancel_order($params = array()) {
        return $this->request('trade/cancel-order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_cancel_batch_orders($params = array()) {
        return $this->request('trade/cancel-batch-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_cancel_symbol_order($params = array()) {
        return $this->request('trade/cancel-symbol-order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_orderinfo($params = array()) {
        return $this->request('trade/orderInfo', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_open_orders($params = array()) {
        return $this->request('trade/open-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_history($params = array()) {
        return $this->request('trade/history', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_trade_fills($params = array()) {
        return $this->request('trade/fills', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function publicGetPublicTime($params = array()) {
        return $this->request('public/time', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetPublicCurrencies($params = array()) {
        return $this->request('public/currencies', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetPublicProducts($params = array()) {
        return $this->request('public/products', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetPublicExchangeInfo($params = array()) {
        return $this->request('public/exchangeInfo', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetMarketTicker($params = array()) {
        return $this->request('market/ticker', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetMarketTickers($params = array()) {
        return $this->request('market/tickers', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetMarketFills($params = array()) {
        return $this->request('market/fills', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetMarketCandles($params = array()) {
        return $this->request('market/candles', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetMarketDepth($params = array()) {
        return $this->request('market/depth', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountAssets($params = array()) {
        return $this->request('account/assets', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountTransferRecords($params = array()) {
        return $this->request('account/transferRecords', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privatePostAccountBills($params = array()) {
        return $this->request('account/bills', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeOrders($params = array()) {
        return $this->request('trade/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeBatchOrders($params = array()) {
        return $this->request('trade/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeCancelOrder($params = array()) {
        return $this->request('trade/cancel-order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeCancelBatchOrders($params = array()) {
        return $this->request('trade/cancel-batch-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeCancelSymbolOrder($params = array()) {
        return $this->request('trade/cancel-symbol-order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeOrderInfo($params = array()) {
        return $this->request('trade/orderInfo', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeOpenOrders($params = array()) {
        return $this->request('trade/open-orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeHistory($params = array()) {
        return $this->request('trade/history', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostTradeFills($params = array()) {
        return $this->request('trade/fills', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
}
